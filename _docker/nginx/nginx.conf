worker_processes auto;

events { worker_connections 1024; }

http {
    include                                 /etc/nginx/proxy.conf;

    # Support WebSockets
    map $http_connection $connection_upgrade {
        "~*Upgrade" $http_connection;
        default keep-alive;
    }

    upstream public-web {
        server                              public-web:7138;
    }

    upstream identity-api {
        server                              identity-api:7066;
    }

    upstream clinicmanagement-blazor {
        server                              clinicmanagement-blazor:7004;
    }

    upstream scheduling-blazor {
        server                              scheduling-blazor:7154;
    }

    server {
        server_name                         vc.local;
        root                                /usr/share/nginx/html;

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to displaying a 404.
            try_files                       $uri $uri/ =404;
        }

        listen                              443 ssl http2;
        listen                              [::]:443 ssl http2;
        ssl_certificate                     /etc/nginx/certs/veterinaryclinic.crt;
        ssl_certificate_key                 /etc/nginx/certs/veterinaryclinic.key;
        ssl_password_file                   /etc/nginx/certs/passwords;
        ssl_session_timeout                 1d;
        ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers           off;
        ssl_ciphers                         HIGH:!aNULL:!MD5;
        ssl_session_cache                   shared:SSL:10m;
        ssl_session_tickets                 off;
        ssl_stapling                        off;
        add_header                          X-Content-Type-Options nosniff;
        add_header                          X-Frame-Options SAMEORIGIN;
    }

    server {
        server_name                         public-web.vc.local;

        location / {
            proxy_pass                      http://public-web;
        }

        listen                              443 ssl http2;
        listen                              [::]:443 ssl http2;
        ssl_certificate                     /etc/nginx/certs/veterinaryclinic.crt;
        ssl_certificate_key                 /etc/nginx/certs/veterinaryclinic.key;
        ssl_password_file                   /etc/nginx/certs/passwords;
        ssl_session_timeout                 1d;
        ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers           off;
        ssl_ciphers                         HIGH:!aNULL:!MD5;
        ssl_session_cache                   shared:SSL:10m;
        ssl_session_tickets                 off;
        ssl_stapling                        off;
        add_header                          X-Content-Type-Options nosniff;
        add_header                          X-Frame-Options SAMEORIGIN;
    }

    server {
        server_name                         identity-api.vc.local;

        location / {
            proxy_pass                      http://identity-api;
        }

        listen                              443 ssl http2;
        listen                              [::]:443 ssl http2;
        ssl_certificate                     /etc/nginx/certs/veterinaryclinic.crt;
        ssl_certificate_key                 /etc/nginx/certs/veterinaryclinic.key;
        ssl_password_file                   /etc/nginx/certs/passwords;
        ssl_session_timeout                 1d;
        ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers           off;
        ssl_ciphers                         HIGH:!aNULL:!MD5;
        ssl_session_cache                   shared:SSL:10m;
        ssl_session_tickets                 off;
        ssl_stapling                        off;
        add_header                          X-Content-Type-Options nosniff;
        add_header                          X-Frame-Options SAMEORIGIN;
    }

    server {
        server_name                         clinicmanagement-blazor.vc.local;

        location / {
            proxy_pass                      http://clinicmanagement-blazor;
        }

        # Configure the SignalR Endpoint
        location /notificationhub {
            proxy_pass                      http://clinicmanagement-blazor;

            # Configuration for WebSockets
            proxy_set_header                Upgrade $http_upgrade;
            proxy_set_header                Connection $connection_upgrade;
            proxy_cache                     off;

            # WebSockets were implemented after http/1.0
            proxy_http_version              1.1;

            # Configuration for ServerSentEvents
            proxy_buffering                 off;

            # Configuration for LongPolling or if your KeepAliveInterval is longer than 60 seconds
            proxy_read_timeout              100s;
        }

        listen                              443 ssl http2;
        listen                              [::]:443 ssl http2;
        ssl_certificate                     /etc/nginx/certs/veterinaryclinic.crt;
        ssl_certificate_key                 /etc/nginx/certs/veterinaryclinic.key;
        ssl_password_file                   /etc/nginx/certs/passwords;
        ssl_session_timeout                 1d;
        ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers           off;
        ssl_ciphers                         HIGH:!aNULL:!MD5;
        ssl_session_cache                   shared:SSL:10m;
        ssl_session_tickets                 off;
        ssl_stapling                        off;
        add_header                          X-Content-Type-Options nosniff;
        add_header                          X-Frame-Options SAMEORIGIN;
    }

    server {
        server_name                         scheduling-blazor.vc.local;

        location / {
            proxy_pass                      http://scheduling-blazor;
        }

        # Configure the SignalR Endpoint
        location /notificationhub {
            proxy_pass                      http://scheduling-blazor;

            # Configuration for WebSockets
            proxy_set_header                Upgrade $http_upgrade;
            proxy_set_header                Connection $connection_upgrade;
            proxy_cache                     off;

            # WebSockets were implemented after http/1.0
            proxy_http_version              1.1;

            # Configuration for ServerSentEvents
            proxy_buffering                 off;

            # Configuration for LongPolling or if your KeepAliveInterval is longer than 60 seconds
            proxy_read_timeout              100s;
        }

        listen                              443 ssl http2;
        listen                              [::]:443 ssl http2;
        ssl_certificate                     /etc/nginx/certs/veterinaryclinic.crt;
        ssl_certificate_key                 /etc/nginx/certs/veterinaryclinic.key;
        ssl_password_file                   /etc/nginx/certs/passwords;
        ssl_session_timeout                 1d;
        ssl_protocols                       TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers           off;
        ssl_ciphers                         HIGH:!aNULL:!MD5;
        ssl_session_cache                   shared:SSL:10m;
        ssl_session_tickets                 off;
        ssl_stapling                        off;
        add_header                          X-Content-Type-Options nosniff;
        add_header                          X-Frame-Options SAMEORIGIN;
    }

    server {
        if ($host = vc.local) {
            return 301 https://$host$request_uri;
        }

        if ($host = public-web.vc.local) {
            return 301 https://$host$request_uri;
        }

        if ($host = identity-api.vc.local) {
            return 301 https://$host$request_uri;
        }

        if ($host = clinicmanagement-blazor.vc.local) {
            return 301 https://$host$request_uri;
        }

        if ($host = scheduling-blazor.vc.local) {
            return 301 https://$host$request_uri;
        }

        listen 80;
        listen [::]:80;
        server_name vc.local public-web.vc.local identity-api.vc.local clinicmanagement-blazor.vc.local scheduling-blazor.vc.local;
        return 404;
    }
}